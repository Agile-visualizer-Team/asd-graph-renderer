{"C:\\Users\\pirof\\WebstormProjects\\asd-graph-renderer\\src\\schema-validators.ts":{"path":"C:\\Users\\pirof\\WebstormProjects\\asd-graph-renderer\\src\\schema-validators.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":75}},"4":{"start":{"line":7,"column":14},"end":{"line":7,"column":45}},"5":{"start":{"line":11,"column":24},"end":{"line":19,"column":1}},"6":{"start":{"line":20,"column":28},"end":{"line":76,"column":1}},"7":{"start":{"line":77,"column":27},"end":{"line":80,"column":1}},"8":{"start":{"line":81,"column":0},"end":{"line":81,"column":103}},"9":{"start":{"line":82,"column":0},"end":{"line":82,"column":83}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/pirof/WebstormProjects/asd-graph-renderer/src/schema-validators.ts","sources":["C:/Users/pirof/WebstormProjects/asd-graph-renderer/src/schema-validators.ts"],"names":[],"mappings":";;;;;;AAAA,8CAAsB;AAEtB;;GAEG;AAEH,MAAM,eAAe,GAAG;IACpB,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACR,QAAQ,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC;QAC1B,KAAK,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC;QACvB,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC;KACzB;IACD,QAAQ,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;CAC9B,CAAC;AAEF,MAAM,mBAAmB,GAAG;IACxB,IAAI,EAAE,QAAQ;IACd,UAAU,EAAE;QACR,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC5B,KAAK,EAAE;YACH,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACR,IAAI,EAAE;oBACF,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACR,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,MAAM,EAAE,OAAO,EAAE,yBAAyB,EAAE;wBAC5E,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,IAAI,EAAC,QAAQ,EAAC,EAAE,QAAQ,EAAE,CAAC,EAAC;qBAC1G;iBACJ;gBACD,KAAK,EAAE;oBACH,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACR,KAAK,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,UAAU,EAAE;gCACR,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,OAAO,EAAE,OAAO,EAAE,YAAY,EAAC;gCAC/D,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE;gCACpE,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE;6BACrE;yBACJ;qBACJ;iBACJ;aACJ,EAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;SACvB;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACR,IAAI,EAAE;oBACF,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACR,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,MAAM,EAAE,OAAO,EAAE,yBAAyB,EAAC;wBAC3E,SAAS,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,MAAM,EAAC,IAAI,CAAC,EAAC,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,EAAC,IAAI,EAAC,QAAQ,EAAC,EAAE,QAAQ,EAAE,CAAC,EAAC;qBAC5G;iBACJ;gBACD,KAAK,EAAE;oBACH,IAAI,EAAE,QAAQ;oBACd,UAAU,EAAE;wBACR,KAAK,EAAE;4BACH,IAAI,EAAE,QAAQ;4BACd,UAAU,EAAE;gCACR,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE;gCACjE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,EAAE;6BACpE;yBACJ;wBACD,QAAQ,EAAE,EAAC,IAAI,EAAC,SAAS,EAAE,OAAO,EAAE,IAAI,EAAC;qBAC5C;iBACJ;aACJ,EAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;SACvB;KACF;IACD,QAAQ,EAAE,CAAC,UAAU,EAAE,OAAO,EAAC,MAAM,CAAC;CACvC,CAAC;AAEJ,MAAM,kBAAkB,GAAG;IACvB,IAAI,EAAE,OAAO;IACb,KAAK,EAAG,EAAC,IAAI,EAAE,QAAQ,EAAC;CAC3B,CAAC;AAEW,QAAA,sBAAsB,GAAG,IAAI,aAAG,CAAC,EAAC,WAAW,EAAC,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAClF,QAAA,wBAAwB,GAAG,IAAI,aAAG,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC","sourcesContent":["import Ajv from \"ajv\";\r\n\r\n/**\r\n * @see https://ajv.js.org/guide/getting-started.html#basic-data-validation\r\n */\r\n\r\nconst TEMPLATE_SCHEMA = {\r\n    type: \"object\",\r\n    properties: {\r\n        template: {type: \"string\"},\r\n        nodes: {type: \"string\"},\r\n        edge: {type: \"string\"},\r\n    },\r\n    required: [\"nodes\", \"edge\"]\r\n};\r\n\r\nconst NEW_TEMPLATE_SCHEMA = {\r\n    type: \"object\",\r\n    properties: {\r\n        template: { type: \"string\" },\r\n        nodes: {\r\n            type: \"object\",\r\n            properties: {\r\n                atom: {\r\n                    type: \"object\",\r\n                    properties: {\r\n                        name: { type: \"string\", default:\"node\", pattern: \"^[A-Za-z][A-Za-z0-9\\_]*\" },\r\n                        variables: { type: \"array\", default: [\"label\"], uniqueItems: true, items: {type:\"string\"}, minItems: 1}\r\n                    }\r\n                },\r\n                style: {\r\n                    type: \"object\",\r\n                    properties: {\r\n                        color: {\r\n                            type: \"object\",\r\n                            properties: {\r\n                                root: { type: \"string\", default:\"green\", pattern: \"^[A-Za-z]+\"},\r\n                                leaves: { type: \"string\", default:\"magenta\", pattern: \"^[A-Za-z]+\" },\r\n                                nonRoot: { type: \"string\", default:\"blue\", pattern: \"^[A-Za-z]+\" }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },required: [\"atom\"]\r\n        },\r\n        edge: {\r\n          type: \"object\",\r\n          properties: {\r\n              atom: {\r\n                  type: \"object\",\r\n                  properties: {\r\n                      name: { type: \"string\", default:\"edge\", pattern: \"^[A-Za-z][A-Za-z0-9\\_]*\"},\r\n                      variables: { type: \"array\", default:[\"from\",\"to\"],uniqueItems: true, items: {type:\"string\"}, minItems: 2}\r\n                  }\r\n              },\r\n              style: {\r\n                  type: \"object\",\r\n                  properties: {\r\n                      color: {\r\n                          type: \"object\",\r\n                          properties: {\r\n                              branch: { type: \"string\", default:\"blue\", pattern: \"^[A-Za-z]+\" },\r\n                              path: { type: \"string\", default:\"yellow\", pattern: \"^[A-Za-z]+\" }\r\n                          },\r\n                      },\r\n                      oriented: {type:\"boolean\", default: true}\r\n                  }\r\n              }\r\n          },required: [\"atom\"]\r\n      }\r\n    },\r\n    required: [\"template\", \"nodes\",\"edge\"]\r\n  };\r\n\r\nconst ANSWER_SETS_SCHEMA = {\r\n    type: \"array\",\r\n    items:  {type: \"object\"}\r\n};\r\n\r\nexport const validateTemplateSchema = new Ajv({useDefaults:true}).compile(NEW_TEMPLATE_SCHEMA);\r\nexport const validateAnswerSetsSchema = new Ajv().compile(ANSWER_SETS_SCHEMA);"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ab59724d771134233dd6f0e7f98e2586c35e0107"}}